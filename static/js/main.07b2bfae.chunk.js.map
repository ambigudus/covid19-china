{"version":3,"sources":["components/Footer/footer.module.scss","components/StatsMap/statsMap.module.scss","components/StatCards/statCards.module.scss","app.module.scss","components/NumberRace/index.js","utils/index.js","components/StatCard/index.js","components/StatCards/index.js","components/StatsTable/index.js","config/axios.js","service/Covid19StatsService.js","components/Footer/index.js","hooks/useLocalstorage.js","hooks/useRefWidthHeight.js","hooks/useComponentWillUnmount.js","utils/helper.js","components/StatsMap/index.js","App.js","hooks/usePolling.js","index.js","components/StatsTable/stateTable.module.scss","components/StatCard/statCard.module.scss"],"names":["module","exports","NumberRace","props","useState","children","value","setValue","useEffect","isNaN","isFloatType","Number","isInteger","change","Math","ceil","nearlyLastHop","abs","t","setTimeout","clearTimeout","format","calculateActiveCase","stat","confirmed","recovered","death","calculateMortalityRate","calculateRecoveredRate","formatNumber","num","toFixed","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatDateInAPIStd","date","month","String","getMonth","padStart","day","getDate","year","getFullYear","StatCard","style","background","bgColor","className","classes","container","title","isLoading","loader","statContainer","opacity","inc","footer","percent","StatCards","data","useMemo","active","confirmedInc","activeInc","recoveredInc","deathInc","lastData","length","i","d","lastDayStat","statCardContaier","statDate","columns","Header","accessor","sortType","Cell","TableDiffCell","formator","id","colorReverse","rowData","row","original","pastData","cell","column","gap","diffData","diffDataPositive","diffDataNegetive","StatsTable","useTable","initialState","sortBy","desc","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","overflowX","table","map","headerGroup","getHeaderGroupProps","headers","rightAlign","leftAlign","getHeaderProps","getSortByToggleProps","thContainer","sorter","dangerouslySetInnerHTML","__html","isSorted","isSortedDesc","render","getRowProps","cells","getCellProps","authAxios","axios","create","baseURL","timeout","Covid19StatsService","getLatestStateStats","withLastDay","today","Date","getHours","setDate","todayStr","getStateStatsByDate","stats","lastDay","tasks","push","returnRawData","Promise","all","todayStats","lastDayStats","Object","keys","forEach","key","values","get","res","Footer","github","target","rel","href","height","alt","viewBox","version","width","aria-hidden","fillRule","details","color","useLocalStorage","storageKey","initialValue","dataFormater","_localstorage","getItem","storageVal","setStorageVal","setItem","val","localStorage","JSON","parse","error","undefined","removeItem","stringify","useRefWidthHeight","fn","setHeight","setWidth","lastNodeUpdate","useRef","lastHeightWidthUpdateFn","window","removeEventListener","current","refUpdaterCallback","useCallback","node","updateHeightWidth","rect","getBoundingClientRect","addEventListener","GEO_CHINA_JSON_CACHE","densityKeysSchema","dataModifier","recoveredRate","mortalityRate","initalTooltipState","show","x","y","selectedId","StatsMap","React","memo","autoScale","mapDensityKey","_autoWidth","refUpdater","tooltip","setTooltip","countryMapRef","autoWidth","min","autoHeight","handleMouseOver","event","stateName","clientX","clientY","CTM","pageX","pageY","getScreenCTM","e","a","f","_x","scrollX","_y","scrollY","innerWidth","generateDefaultData","handleMouseOut","v","densityKeySchema","find","ref","display","justifyContent","alignItems","minWidth","minHeight","position","left","top","valueKey","svgRef","colorRange","ChinaMap","chinaGeoJson","setChinaGeoJson","fetch","then","json","scaleLinear","range","interpolate","interpolateRgb","domain","max","dataMap","path","projection","geoMercator","fitSize","geoPath","getColor","isSelected","preserveAspectRatio","features","feature","properties","name","onMouseOver","onMouseOut","stroke","strokeWidth","fill","TooltipContent","tooltipDataContainer","dataContainer","valueInc","App","lastetData","setLatestData","setStatDate","setIsLoading","isTableView","setIsTableView","setMapDensityKey","ms","deps","cleanupFn","working","setInterval","clearInterval","usePolling","catch","err","console","log","finally","headerContainer","h1","text","img","src","headerInfo","contentHeader","selection","type","checked","onChange","htmlFor","extraSelection","flexWrap","statsMapContainer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07b2bfae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"footer_container__Yn8Zy\",\"details\":\"footer_details__2_lGn\",\"github\":\"footer_github__3Ro3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"statsMap_tooltip__1F6M3\",\"container\":\"statsMap_container__1Dk4S\",\"tooltipDataContainer\":\"statsMap_tooltipDataContainer__3SwSJ\",\"stateName\":\"statsMap_stateName__1MHOM\",\"dataContainer\":\"statsMap_dataContainer__NdYUe\",\"data\":\"statsMap_data__2WS9e\",\"key\":\"statsMap_key__6JYUh\",\"value\":\"statsMap_value__1-khx\",\"valueInc\":\"statsMap_valueInc__1mIXs\",\"diffDataPositive\":\"statsMap_diffDataPositive__2-EoN\",\"diffDataNegetive\":\"statsMap_diffDataNegetive__30l8G\",\"footer\":\"statsMap_footer__L5n0d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statCardContaier\":\"statCards_statCardContaier__aHNSZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__3FwrV\",\"h1\":\"app_h1__2QBmM\",\"text\":\"app_text__2RJUA\",\"headerInfo\":\"app_headerInfo__1l4oQ\",\"goCorona\":\"app_goCorona__3SI39\",\"headerContainer\":\"app_headerContainer__3P7UL\",\"img\":\"app_img__MEHrd\",\"spin\":\"app_spin__3TAHL\",\"statsMapContainer\":\"app_statsMapContainer__2NKnY\",\"contentHeader\":\"app_contentHeader__29Rv8\",\"selection\":\"app_selection__3E_k7\",\"extraSelection\":\"app_extraSelection__2FLmO\"};","import { useState, useEffect } from 'react';\n\nfunction NumberRace(props) {\n  const [value, setValue] = useState(props.children);\n\n  useEffect(() => {\n    if (value === props.children) {\n      return;\n    }\n    if (isNaN(props.children)) {\n      return setValue(props.children);\n    }\n\n    const isFloatType = !Number.isInteger(props.children);\n\n    let change = (props.children - value) / 10;\n\n    if (change && !isFloatType) {\n      change = Math.ceil(change);\n    }\n\n    const nearlyLastHop =\n      Math.abs(change * 5 + value) >= Math.abs(props.children);\n\n    const t = setTimeout(\n      () => {\n        if (change === 0 && !isFloatType) {\n          setValue(props.children);\n          return;\n        }\n        setValue(change + value);\n      },\n      nearlyLastHop ? 100 : 30\n    );\n\n    return () => {\n      clearTimeout(t);\n    };\n  }, [value, props.children]);\n\n  return props.format ? props.format(value) : value;\n}\n\nexport default NumberRace;\n","export function calculateActiveCase(stat) {\n  return stat.confirmed - stat.recovered - stat.death;\n}\n\nexport function calculateMortalityRate(stat) {\n  return (stat.death / stat.confirmed) * 100;\n}\n\nexport function calculateRecoveredRate(stat) {\n  return (stat.recovered / stat.confirmed) * 100;\n}\n\nexport function formatNumber(num, toFixed = 0) {\n  return Number(num).toLocaleString('en', {\n    minimumFractionDigits: toFixed,\n    maximumFractionDigits: toFixed,\n  });\n}\n\nexport function formatDateInAPIStd(date) {\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${day}-${month}-${year}`;\n}\n","import React from 'react';\nimport classes from './statCard.module.scss';\nimport NumberRace from '../NumberRace';\nimport { formatNumber } from '../../utils';\n\nconst StatCard = (props) => {\n  return (\n    <div style={{ background: props.bgColor }} className={classes.container}>\n      <span className={classes.title}>\n        {props.title}\n        {props.isLoading && <span className={classes.loader}></span>}\n      </span>\n      <div className={classes.statContainer}>\n        <span className={classes.stat}>\n          <NumberRace format={formatNumber}>{props.stat}</NumberRace>\n        </span>\n\n        <span\n          style={{ opacity: props.inc === 0 ? 0 : 1 }}\n          className={classes.inc}\n        >\n          {props.inc > 0 && '+'}\n          {<NumberRace format={formatNumber}>{props.inc}</NumberRace>}\n        </span>\n      </div>\n\n      <span className={classes.footer}>\n        {!!props.percent && (\n          <span className={classes.percent}>\n            {formatNumber(props.percent, 2)}%\n          </span>\n        )}\n        {!!props.date && <span className={classes.date}>{props.date}</span>}\n      </span>\n    </div>\n  );\n};\n\nexport default StatCard;\n","import React, { useMemo } from 'react';\nimport StatCard from '../StatCard';\nimport classes from './statCards.module.scss';\nimport { calculateActiveCase } from '../../utils';\n\nconst StatCards = (props) => {\n  const data = useMemo(() => {\n    const data = {\n      confirmed: 0,\n      active: 0,\n      recovered: 0,\n      death: 0,\n\n      confirmedInc: 0,\n      activeInc: 0,\n      recoveredInc: 0,\n      deathInc: 0,\n    };\n\n    const lastData = {\n      confirmed: 0,\n      active: 0,\n      recovered: 0,\n      death: 0,\n    };\n\n    if (!props.data || !props.data.length) {\n      return data;\n    }\n\n    for (let i = 0; i < props.data.length; i++) {\n      const d = props.data[i];\n      data.confirmed += d.confirmed;\n      data.recovered += d.recovered;\n      data.death += d.death;\n\n      lastData.confirmed += d.lastDayStat.confirmed;\n      lastData.recovered += d.lastDayStat.recovered;\n      lastData.death += d.lastDayStat.death;\n    }\n    lastData.active = calculateActiveCase(lastData);\n    data.active = calculateActiveCase(data);\n\n    data.confirmedInc = data.confirmed - lastData.confirmed;\n    data.activeInc = data.active - lastData.active;\n    data.recoveredInc = data.recovered - lastData.recovered;\n    data.deathInc = data.death - lastData.death;\n\n    return data;\n  }, [props.data]);\n\n  return (\n    <div className={classes.statCardContaier}>\n      <StatCard\n        isLoading={props.isLoading}\n        bgColor=\"#e74c3c\"\n        title=\"累计CONFIRMED\"\n        inc={data.confirmedInc}\n        stat={data.confirmed}\n        date={props.statDate}\n      />\n      <StatCard\n        isLoading={props.isLoading}\n        bgColor=\"#2980b9\"\n        title=\"现存ACTIVE\"\n        inc={data.activeInc}\n        stat={data.active}\n        percent={data.confirmed ? (data.active / data.confirmed) * 100 : 0}\n      />\n      <StatCard\n        isLoading={props.isLoading}\n        bgColor=\"#27ae60\"\n        title=\"治愈RECOVERED\"\n        inc={data.recoveredInc}\n        stat={data.recovered}\n        percent={data.confirmed ? (data.recovered / data.confirmed) * 100 : 0}\n      />\n      <StatCard\n        isLoading={props.isLoading}\n        bgColor=\"#2c3e50\"\n        title=\"死亡DEATH\"\n        percent={data.confirmed ? (data.death / data.confirmed) * 100 : 0}\n        inc={data.deathInc}\n        stat={data.death}\n      />\n    </div>\n  );\n};\n\nexport default StatCards;\n","import React from 'react';\nimport { useTable, useSortBy } from 'react-table';\nimport {\n  calculateActiveCase,\n  formatNumber,\n  calculateMortalityRate,\n  calculateRecoveredRate,\n} from '../../utils';\n\nimport classes from './stateTable.module.scss';\n\nconst columns = [\n  {\n    Header: 'Province',\n    accessor: 'stateName',\n  },\n  {\n    Header: 'Confirmed',\n    accessor: 'confirmed',\n    sortType: 'basic',\n    Cell: (props) => <TableDiffCell {...props} formator={formatNumber} />,\n  },\n  {\n    Header: 'Active',\n    id: 'active',\n    sortType: 'basic',\n    accessor: calculateActiveCase,\n    Cell: (props) => <TableDiffCell {...props} formator={formatNumber} />,\n  },\n  {\n    Header: 'Recovered',\n    accessor: 'recovered',\n    sortType: 'basic',\n    Cell: (props) => (\n      <TableDiffCell colorReverse {...props} formator={formatNumber} />\n    ),\n  },\n  {\n    Header: 'Death',\n    accessor: 'death',\n    sortType: 'basic',\n    Cell: (props) => <TableDiffCell {...props} formator={formatNumber} />,\n  },\n  {\n    Header: 'Death Rate',\n    id: 'mortalityRate',\n    sortType: 'basic',\n    accessor: calculateMortalityRate,\n    Cell: (props) => formatNumber(props.value, 2) + '%',\n  },\n  {\n    Header: 'Recovered Rate',\n    id: 'recoveredRate',\n    sortType: 'basic',\n    accessor: calculateRecoveredRate,\n    Cell: (props) => formatNumber(props.value, 2) + '%',\n  },\n];\n\nfunction StatsTable(props) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data: props.data || [{}],\n      initialState: {\n        sortBy: [\n          {\n            id: 'confirmed',\n            desc: true,\n          },\n        ],\n      },\n    },\n    useSortBy\n  );\n\n  return (\n    <div style={{ overflowX: 'auto' }}>\n      <table className={classes.table} {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup, i) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column, i) => (\n                <th\n                  className={i ? classes.rightAlign : classes.leftAlign}\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                >\n                  <div className={classes.thContainer}>\n                    {!!i && (\n                      <span\n                        className={classes.sorter}\n                        dangerouslySetInnerHTML={{\n                          __html: column.isSorted\n                            ? column.isSortedDesc\n                              ? '&#x2193;'\n                              : '&#x2191;'\n                            : ' ',\n                        }}\n                      />\n                    )}\n                    {column.render('Header')}\n\n                    {!i && (\n                      <span\n                        className={classes.sorter}\n                        dangerouslySetInnerHTML={{\n                          __html: column.isSorted\n                            ? column.isSortedDesc\n                              ? '&#x2193;'\n                              : '&#x2191;'\n                            : ' ',\n                        }}\n                      />\n                    )}\n\n                    {!i && (\n                      <span className={classes.statDate}>\n                        {props.statDate}\n                      </span>\n                    )}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell, i) => {\n                  return (\n                    <td\n                      className={i ? classes.rightAlign : classes.leftAlign}\n                      {...cell.getCellProps()}\n                    >\n                      {cell.render('Cell')}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nfunction TableDiffCell(props) {\n  const rowData = props.row.original;\n  const pastData = props.cell.column.accessor(rowData.lastDayStat);\n  const gap = props.value - pastData;\n  return (\n    <span>\n      {!!gap && (\n        <span\n          className={`${classes.diffData} ${\n            gap > 0 && !props.colorReverse\n              ? classes.diffDataPositive\n              : classes.diffDataNegetive\n          }`}\n        >\n          {gap > 0 && '+'}\n          {props.value - pastData}\n        </span>\n      )}\n      <span>{props.formator(props.value)}</span>\n    </span>\n  );\n}\n\nexport default StatsTable;\n","import axios from 'axios';\n\nexport const authAxios = axios.create({\n\tbaseURL: \"http://39.96.95.216:5566\",//process.env.REACT_APP_API_ENDPOINT,\n  timeout: 120000,\n});\n","import { formatDateInAPIStd } from '../utils';\nimport { authAxios } from '../config/axios';\n\nexport const Covid19StatsService = {\n  async getLatestStateStats({ withLastDay = false } = {}) {\n    const today = new Date();\n\n    if (today.getHours() < 6) {\n      today.setDate(today.getDate() - 1);\n    }\n\n    const todayStr = formatDateInAPIStd(today);\n    if (!withLastDay) {\n      const data = await Covid19StatsService.getStateStatsByDate(todayStr);\n      return {\n        date: todayStr,\n        stats: data,\n      };\n    }\n\n    const d = new Date(today);\n    d.setDate(d.getDate() - 1);\n    const lastDay = formatDateInAPIStd(d);\n\n    const tasks = [];\n    tasks.push(\n      Covid19StatsService.getStateStatsByDate(todayStr, {\n        returnRawData: true,\n      }),\n      Covid19StatsService.getStateStatsByDate(lastDay, { returnRawData: true })\n    );\n\n    const [todayStats, lastDayStats] = await Promise.all(tasks);\n\n    Object.keys(todayStats).forEach((key) => {\n      todayStats[key].lastDayStat = lastDayStats[key] || {\n        confirmed: 0,\n        recovered: 0,\n        death: 0,\n      };\n    });\n\n    return {\n      date: todayStr,\n      stats: Object.values(todayStats),\n    };\n  },\n\n  async getStateStatsByDate(date, { returnRawData = false } = {}) {\n    const res = await authAxios.get('covid19/date/' + date);\n    const data = res.data || {};\n    if (returnRawData) {\n      return data;\n    }\n\n    return Object.values(res.data);\n  },\n};\n","import React from 'react';\n\nimport classes from './footer.module.scss';\n\nconst Footer = () => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.github}>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/ambigudus\"\n        >\n          <svg\n            height=\"20\"\n            alt=\"GitHub\"\n            viewBox=\"0 0 16 16\"\n            version=\"1.1\"\n            width=\"20\"\n            aria-hidden=\"true\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n            ></path>\n          </svg>\n        </a>\n      </div>\n      <code className={classes.details}>\n        数据定期更新自{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ color: 'inherit' }}\n          href={'https://bjrbh5.bjd.com.cn/web/page'}\n        >\n         statista.com\n        </a>{' '}\n        <br />\n        Designed & developed by{' '}\n        <a\n          style={{ color: 'inherit' }}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/ambigudus\"\n        >\n          ambigudus\n        </a>\n      </code>\n    </div>\n  );\n};\n\nexport default Footer;\n","/* eslint-disable */\nimport { useState, useEffect, useMemo } from 'react';\n\nexport const useLocalStorage = (storageKey, initialValue, dataFormater) => {\n  const [storageVal, setStorageVal] = useState(\n    _localstorage.getItem(storageKey) || initialValue\n  );\n\n  useEffect(() => {\n    _localstorage.setItem(storageKey, storageVal);\n  }, [storageVal]);\n\n  const formatedValue = useMemo(\n    () => (dataFormater ? dataFormater(storageVal) : storageVal),\n    [storageVal]\n  );\n\n  return [formatedValue, setStorageVal];\n};\n\nconst _localstorage = {\n  getItem(key) {\n    const val = localStorage.getItem(key);\n\n    if (val === null) return undefined;\n\n    try {\n      return JSON.parse(val);\n    } catch (error) {\n      return val; // if not, simply return the value.\n    }\n  },\n\n  setItem(key, value) {\n    if (value === undefined || value === null) {\n      return localStorage.removeItem(key);\n    }\n\n    if (typeof value === 'object') {\n      value = JSON.stringify(value);\n    }\n\n    localStorage.setItem(key, value);\n  },\n};\n","/* eslint-disable */\nimport { useRef } from 'react';\nimport { useState, useCallback } from 'react';\nimport { useComponentWillUnmount } from './useComponentWillUnmount';\n\nexport function useRefWidthHeight() {\n  const [height, setHeight] = useState(null);\n  const [width, setWidth] = useState(null);\n  const lastNodeUpdate = useRef(null);\n  const lastHeightWidthUpdateFn = useRef(null);\n\n  useComponentWillUnmount(() => {\n    window.removeEventListener('resize', lastHeightWidthUpdateFn.current);\n  }, []);\n\n  const refUpdaterCallback = useCallback(\n    (node) => {\n      function updateHeightWidth() {\n        const rect = node && node.getBoundingClientRect();\n        if (node !== null) {\n          clearTimeout(lastNodeUpdate.current);\n          lastNodeUpdate.current = setTimeout(() => {\n            if (rect.height != height) {\n              setHeight(rect.height);\n            }\n            if (rect.width != width) {\n              setWidth(rect.width);\n            }\n          }, 100);\n        }\n      }\n      setTimeout(() => {\n        updateHeightWidth();\n      });\n      window.removeEventListener('resize', lastHeightWidthUpdateFn.current);\n      window.addEventListener('resize', updateHeightWidth, false);\n      lastHeightWidthUpdateFn.current = updateHeightWidth;\n    },\n    [width, height]\n  );\n  return [\n    {\n      height,\n      width,\n    },\n    refUpdaterCallback,\n  ];\n}\n","import { useEffect } from 'react';\nexport function useComponentWillUnmount(fn) {\n  useEffect(\n    () => () => {\n      fn();\n    },\n    //eslint-disable-next-line\n    []\n  );\n}\n","import {\n  calculateActiveCase,\n  calculateRecoveredRate,\n  calculateMortalityRate,\n} from '.';\n\nexport const densityKeysSchema = [\n  {\n    key: 'confirmed',\n    title: '累计Confirmed',\n  },\n  {\n    key: 'active',\n    title: '现存Active',\n    dataModifier: (data) => (data.active = calculateActiveCase(data)),\n  },\n  {\n    key: 'recovered',\n    title: '治愈Recovered',\n  },\n  {\n    key: 'death',\n    title: '死亡Death',\n  },\n  {\n    key: 'recoveredRate',\n    title: '治愈率RecoveredRate',\n    dataModifier: (data) => (data.recoveredRate = calculateRecoveredRate(data)),\n  },\n  {\n    key: 'mortalityRate',\n    title: '死亡率DeathRate',\n    dataModifier: (data) => (data.mortalityRate = calculateMortalityRate(data)),\n  },\n];\n","import React, {\n  useEffect,\n  useMemo,\n  useState,\n  useCallback,\n  useRef,\n} from 'react';\nimport { geoMercator, geoPath } from 'd3-geo';\nimport {scaleLinear} from 'd3-scale';\nimport { interpolateRgb } from 'd3-interpolate';\nimport { max } from 'd3-array';\nimport classes from './statsMap.module.scss';\nimport { useRefWidthHeight } from '../../hooks/useRefWidthHeight';\nimport {\n  formatNumber,\n  calculateActiveCase,\n  calculateMortalityRate,\n  calculateRecoveredRate,\n} from '../../utils';\nimport { useLocalStorage } from '../../hooks/useLocalstorage';\nimport { densityKeysSchema } from '../../utils/helper';\n\nlet GEO_CHINA_JSON_CACHE;\nlet GEO_CHINA_JSON_PATH = './china.json';\n\nconst initalTooltipState = {\n  show: false,\n  x: 0,\n  y: 0,\n  title: '',\n  value: '',\n  selectedId: '',\n};\n\nconst TOOLTIP_WIDTH = 200;\n// const TOOLTIP_HEIGHT = 200;\nconst StatsMap = React.memo((props) => {\n  const { autoScale, mapDensityKey } = props;\n  const [{ width: _autoWidth }, refUpdater] = useRefWidthHeight();\n  const [tooltip, setTooltip] = useState(initalTooltipState);\n  const countryMapRef = useRef();\n\n  const autoWidth = Math.min(_autoWidth, 500);\n  const autoHeight = autoWidth * 1.1;\n\n  const handleMouseOver = useCallback((event, stateName, data) => {\n    const { x, y } = calculateSVGXY(\n      event.pageX,\n      event.pageY,\n      event.target.getScreenCTM()\n    );\n\n    let _x = x - window.scrollX;\n    let _y = y - window.scrollY;\n\n    if (event.pageX + TOOLTIP_WIDTH + 10 > window.innerWidth) {\n      _x = _x - (_x + TOOLTIP_WIDTH - window.innerWidth);\n    }\n\n    // if (event.pageY + TOOLTIP_HEIGHT + 10 < window.document.body.clientHeight-window.scrollY) {\n    //   _y = _y - TOOLTIP_HEIGHT;\n    // }\n\n    const tooltip = {\n      show: true,\n      x: _x,\n      y: _y,\n      title: stateName,\n      data: data || generateDefaultData(stateName),\n      selectedId: stateName,\n    };\n    setTooltip(tooltip);\n  }, []);\n\n  const handleMouseOut = useCallback((event) => {\n    setTooltip((v) => {\n      return { ...v, selectedId: null, show: false };\n    });\n  }, []);\n\n  const data = useMemo(() => {\n    if (props.data) {\n      const densityKeySchema = densityKeysSchema.find(\n        (e) => e.key === mapDensityKey\n      );\n      if (densityKeySchema?.dataModifier) {\n        props.data.forEach((d) => {\n          densityKeySchema.dataModifier(d);\n        });\n      }\n    }\n\n    return props.data;\n  }, [mapDensityKey, props.data]);\n\n  return (\n    <div className={classes.container}>\n      <div\n        ref={(ref) => refUpdater(ref)}\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: '100%',\n          minWidth: '100%',\n          minHeight: autoScale ? autoHeight : '300px',\n        }}\n      >\n        <div\n          style={{\n            height: autoScale ? autoHeight : props.height,\n            width: autoScale ? autoWidth : props.width,\n            position: 'relative',\n          }}\n        >\n          <div\n            className={classes.tooltip}\n            style={{\n              opacity: tooltip.show ? 1 : 0,\n              left: tooltip.x,\n              top: tooltip.y,\n            }}\n          >\n            <TooltipContent data={tooltip.data} />\n          </div>\n          <ChinaMap\n            valueKey={mapDensityKey}\n            svgRef={countryMapRef}\n            selectedId={tooltip.selectedId}\n            handleMouseOver={handleMouseOver}\n            handleMouseOut={handleMouseOut}\n            data={data}\n            height={autoScale ? autoHeight : props.height}\n            width={autoScale ? autoWidth : props.width}\n          />\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default StatsMap;\n\nconst colorRange = {\n  confirmed: ['rgba(231, 76, 60, 0.1)', `rgb(231, 76, 60)`],\n  active: ['rgba(41, 128, 185, 0.1)', `rgba(41, 128, 185, 1)`],\n  recovered: ['rgba(39, 174, 96, 0.1)', `rgba(39, 174, 96, 1)`],\n  death: ['rgba(44, 62, 80, 0.1)', `rgba(44, 62, 80, 1)`],\n  recoveredRate: ['rgba(39, 174, 96, 0.1)', `rgba(39, 174, 96, 1)`],\n  mortalityRate: ['rgba(44, 62, 80, 0.1)', `rgba(44, 62, 80, 1)`],\n};\n\nconst ChinaMap = React.memo(function ChinaMap(props) {\n  const {\n    width,\n    height,\n    data,\n    handleMouseOver,\n    handleMouseOut,\n    selectedId,\n    valueKey = 'confirmed',\n  } = props;\n\n  const [chinaGeoJson, setChinaGeoJson] = useLocalStorage('china-geo', null);\n\n  useEffect(() => {\n    if (GEO_CHINA_JSON_CACHE) {\n      setChinaGeoJson(GEO_CHINA_JSON_CACHE);\n      return;\n    }\n\n    fetch(GEO_CHINA_JSON_PATH)\n      .then((res) => res.json())\n      .then((chinaGeoJson) => {\n        setChinaGeoJson(chinaGeoJson);\n        GEO_CHINA_JSON_CACHE = chinaGeoJson;\n      });\n    //eslint-disable-next-line\n  }, []);\n\n  const color = useMemo(() => {\n    const color = scaleLinear()\n      .range(colorRange[valueKey])\n      .interpolate(interpolateRgb);\n\n    if (!data) {\n      return color;\n    }\n\n    color.domain([0, max(data, (d) => d[valueKey])]);\n\n    return color;\n  }, [data, valueKey]);\n\n  const dataMap = useMemo(() => {\n    const dataMap = {};\n    if (!data) return dataMap;\n\n    for (let i = 0; i < data.length; i++) {\n      const d = data[i];\n      dataMap[d.stateName] = d;\n    }\n    return dataMap;\n  }, [data]);\n\n  const path = useMemo(() => {\n    const projection = geoMercator();\n\n    projection.fitSize([width, height], chinaGeoJson);\n\n    return geoPath().projection(projection);\n  }, [width, height, chinaGeoJson]);\n\n  function getColor(d, isSelected) {\n    if (isSelected) {\n      return 'rgba(38,50,56,1)';\n    }\n\n    if (d && d[valueKey]) {\n      return color(d[valueKey]);\n    }\n    return 'rgba(255,255,255,0.25)';\n  }\n\n  return (\n    <svg\n      ref={props.svgRef}\n      viewBox={`0 0 ${width} ${height}`}\n      preserveAspectRatio=\"xMidYMid meet\"\n      width={width}\n      height={height}\n    >\n      {chinaGeoJson?.features?.map((feature, i) => {\n        const d = dataMap[feature.properties.name];\n        return (\n          <path\n            onMouseOver={(e) => handleMouseOver(e, feature.properties.name, d)}\n            onMouseOut={handleMouseOut}\n            key={`path-${i}`}\n            d={path(feature)}\n            stroke={\n              selectedId === feature.properties.name\n                ? getColor(d, true)\n                : 'rgba(38,50,56,0.5)'\n            }\n            strokeWidth={selectedId === feature.properties.name ? 2 : 0.8}\n            style={{ fill: getColor(d) }}\n          />\n        );\n      })}\n    </svg>\n  );\n});\n\n//悬浮的内容\nconst TooltipContent = (props) => {\n  if (!props.data) {\n    return null;\n  }\n\n  const {\n    confirmed,\n    death,\n    recovered,\n    stateName,\n    lastDayStat = {},\n  } = props.data;\n\n  const inc = {\n    confirmed: confirmed - lastDayStat.confirmed || 0,\n    death: death - lastDayStat.death || 0,\n    recovered: recovered - lastDayStat.recovered || 0,\n    active:\n      calculateActiveCase(props.data) - calculateActiveCase(lastDayStat) || 0,\n  };\n\n  return (\n    <div className={classes.tooltipDataContainer}>\n      <div className={classes.stateName}>{stateName}</div>\n      <div className={classes.dataContainer}>\n        <div className={classes.data}>\n          <span className={classes.key}>Confirmed</span>\n          <span>:</span>\n          <span className={classes.value}>{confirmed ?? 0}</span>\n          {!!inc.confirmed && (\n            <span\n              className={`${classes.valueInc} ${\n                inc.confirmed > 0\n                  ? classes.diffDataPositive\n                  : classes.diffDataNegetive\n              }`}\n            >\n              {inc.confirmed > 0 && '+'}\n              {inc.confirmed}\n            </span>\n          )}\n        </div>\n\n        <div className={classes.data}>\n          <span className={classes.key}>Active</span>\n          <span>:</span>\n          <span className={classes.value}>\n            {calculateActiveCase(props.data) ?? 0}\n          </span>\n          {!!inc.active && (\n            <span\n              className={`${classes.valueInc} ${\n                inc.active > 0\n                  ? classes.diffDataPositive\n                  : classes.diffDataNegetive\n              }`}\n            >\n              {inc.active > 0 && '+'}\n              {inc.active}\n            </span>\n          )}\n        </div>\n\n        <div className={classes.data}>\n          <span className={classes.key}>Recovered</span>\n          <span>:</span>\n          <span className={classes.value}>{recovered ?? 0}</span>\n\n          {!!inc.recovered && (\n            <span\n              className={`${classes.valueInc} ${\n                inc.death < 0\n                  ? classes.diffDataPositive\n                  : classes.diffDataNegetive\n              }`}\n            >\n              {inc.recovered > 0 && '+'}\n              {inc.recovered}\n            </span>\n          )}\n        </div>\n\n        <div className={classes.data}>\n          <span className={classes.key}>Death</span>\n          <span>:</span>\n          <span className={classes.value}>{death ?? 0}</span>\n          {!!inc.death && (\n            <span\n              className={`${classes.valueInc} ${\n                inc.death > 0\n                  ? classes.diffDataPositive\n                  : classes.diffDataNegetive\n              }`}\n            >\n              {inc.death > 0 && '+'}\n              {inc.death}\n            </span>\n          )}\n        </div>\n      </div>\n      <div className={classes.footer}>\n        <span>\n          死亡率 :{' '}\n          {formatNumber(calculateMortalityRate(props.data) || 0, 2)}%\n        </span>\n        <span>\n          治愈率 :{' '}\n          {formatNumber(calculateRecoveredRate(props.data) || 0, 2)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction calculateSVGXY(clientX, clientY, CTM) {\n  //(ax+e, dy+f) = (mouseX,mouseY)\n  return {\n    x: (clientX - CTM.e) / CTM.a,\n    y: (clientY - CTM.f) / CTM.d,\n  };\n}\n\nfunction generateDefaultData(stateName) {\n  return {\n    confirmed: 0,\n    death: 0,\n    recovered: 0,\n    stateName: stateName,\n    lastDayStat: {\n      confirmed: 0,\n      death: 0,\n      recovered: 0,\n    },\n  };\n}\n","import React, { useState } from 'react';\nimport classes from './app.module.scss';\nimport StatCards from './components/StatCards';\nimport StatsTable from './components/StatsTable';\nimport { Covid19StatsService } from './service/Covid19StatsService';\nimport { usePolling } from './hooks/usePolling';\nimport Footer from './components/Footer';\nimport { useLocalStorage } from './hooks/useLocalstorage';\nimport StatsMap from './components/StatsMap';\nimport { densityKeysSchema } from './utils/helper';\n\nconst tenMin = 1000 * 60 * 10;\n\nfunction App() {\n  const [lastetData, setLatestData] = useLocalStorage('__last_data__', []);\n  const [statDate, setStatDate] = useLocalStorage('__date__');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTableView, setIsTableView] = useState(false);\n  const [mapDensityKey, setMapDensityKey] = useState(densityKeysSchema[0].key);\n\n  usePolling(\n    () => {\n      setIsLoading(true);\n      Covid19StatsService.getLatestStateStats({ withLastDay: true })\n        .then((data) => {\n          setStatDate(data.date);\n          setLatestData(data.stats);\n        })\n        .catch((err) => {\n          console.error(err);\n          console.log('Something went wrong');\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    },\n    tenMin,\n    []\n  );\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.headerContainer}>\n        <div className={classes.h1}>\n          <span className={classes.text}>\n            <span>C</span>\n            <div className={classes.img}>\n              <img alt=\"O\" src=\"favicon.ico\" />\n            </div>\n            <span>VID-19 China</span>\n          </span>\n\n        </div>\n        <div className={classes.h1}>\n          <span className={classes.text}>\n            <span>中国新冠肺炎实时数据</span>\n          </span>\n\n        </div>\n        <span className={classes.headerInfo}>\n          Refined stats from COVID-19{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{ color: 'inherit' }}\n            href={'https://www.statista.com/statistics/1090007/china-confirmed-and-suspected-wuhan-coronavirus-cases-region/'}\n          >\n            Official Website\n          </a>{' '}\n        </span>\n      </div>\n\n      <StatCards isLoading={isLoading} statDate={statDate} data={lastetData} />\n      <div>\n        <div className={classes.contentHeader}>\n          <h4>省份数据</h4>\n          <div className={classes.selection}>\n            <input\n              type=\"checkbox\"\n              name=\"tableView\"\n              id=\"tableView\"\n              checked={isTableView}\n              value={isTableView}\n              onChange={() => setIsTableView((v) => !v)}\n            />\n            <label htmlFor=\"tableView\"> 查看列表</label>\n          </div>\n        </div>\n\n        <div className={classes.extraSelection}>\n          {!isTableView && (\n            <div\n              style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                alignItems: 'center',\n              }}\n            >\n              <span>密度Density : </span>\n              {densityKeysSchema.map((key) => {\n                return (\n                  <span className={classes.selection} key={key.key}>\n                    <input\n                      checked={key.key === mapDensityKey}\n                      type=\"radio\"\n                      id={key.key}\n                      name=\"mapDensityKey\"\n                      value={key.key}\n                      onChange={(e) => setMapDensityKey(e.target.value)}\n                    />\n                    <label htmlFor={key.key}>{key.title}</label>\n                  </span>\n                );\n              })}\n            </div>\n          )}\n        </div>\n\n        <div style={{ minHeight: 300 }}>\n          {isTableView && <StatsTable statDate={statDate} data={lastetData} />}\n          {!isTableView && (\n            <div className={classes.statsMapContainer}>\n              <StatsMap\n                autoScale\n                width=\"480\"\n                height=\"450\"\n                statDate={statDate}\n                data={lastetData}\n                mapDensityKey={mapDensityKey}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n\nimport { useEffect, useRef } from 'react';\n\nexport const usePolling = (fn, ms = 5000, deps, cleanupFn) => {\n  const working = useRef();\n\n  useEffect(() => {\n    fn();\n    const timeout = setInterval(async () => {\n      if (working.current) return;\n      working.current = true;\n      try {\n        await fn();\n      } finally {\n        working.current = false;\n      }\n    }, ms);\n\n    return () => {\n      working.current = false;\n      cleanupFn && cleanupFn();\n      clearInterval(timeout);\n    };\n  }, deps);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"stateTable_table__3DCA4\",\"thContainer\":\"stateTable_thContainer__3Jt6M\",\"statDate\":\"stateTable_statDate__3UFMC\",\"rightAlign\":\"stateTable_rightAlign__1c6K0\",\"leftAlign\":\"stateTable_leftAlign__2akZ5\",\"diffData\":\"stateTable_diffData__3t3jm\",\"diffDataPositive\":\"stateTable_diffDataPositive__xc5JF\",\"diffDataNegetive\":\"stateTable_diffDataNegetive__12c6l\",\"sorter\":\"stateTable_sorter__1Wqbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"statCard_container__axBki\",\"title\":\"statCard_title__2CFnT\",\"loader\":\"statCard_loader__19Cyc\",\"spin\":\"statCard_spin__3eFjj\",\"statContainer\":\"statCard_statContainer__1OTVG\",\"stat\":\"statCard_stat__302PL\",\"inc\":\"statCard_inc__22zAL\",\"footer\":\"statCard_footer__38dXo\",\"percent\":\"statCard_percent__DjrYM\",\"date\":\"statCard_date__1Uj8i\"};"],"sourceRoot":""}